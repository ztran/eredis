-ifndef(_LOGGER_HRL).
-define(_LOGGER_HRL,true).

-ifndef(TEST).
%% DEBUG > INFO > NOTICE > WARNING > ERROR > CRITICAL > ALERT > EMERGENCY > LOG_NONE
-define(DEBUG(Format),lager:debug(Format)).
-define(DEBUG(Format,Args),lager:debug(Format,Args)).
-define(INFO(Format),lager:info(Format)).
-define(INFO(Format,Args),lager:info(Format,Args)).
-define(NOTICE(Format),lager:notice(Format)).
-define(NOTICE(Format,Args),lager:notice(Format,Args)).
-define(WARN(Format),lager:warning(Format)).
-define(WARN(Format,Args),lager:warning(Format,Args)).
-define(ERROR(Format),lager:error(Format)).
-define(ERROR(Format,Args),lager:error(Format,Args)).
-define(CRITICAL(Format),lager:critical(Format)).
-define(CRITICAL(Format,Args),lager:critical(Format,Args)).
-define(ALERT(Format),lager:alert(Format)).
-define(ALERT(Format,Args),lager:alert(Format,Args)).
-define(EMERGENCY(Format),lager:emergency(Format)).
-define(EMERGENCY(Format,Args),lager:emergency(Format,Args)).
-define(REC_DBG(R),lager:pr(R,?MODULE)).
-else.
-define(DEBUG(Format),io:format(Format)).
-define(DEBUG(Format,Args),io:format(Format,Args)).
-define(INFO(Format),io:format(Format)).
-define(INFO(Format,Args),io:format(Format,Args)).
-define(NOTICE(Format),io:format(Format)).
-define(NOTICE(Format,Args),io:format(Format,Args)).
-define(WARN(Format),io:format(Format)).
-define(WARN(Format,Args),io:format(Format,Args)).
-define(ERROR(Format),io:format(Format)).
-define(ERROR(Format,Args),io:format(Format,Args)).
-define(CRITICAL(Format),io:format(Format)).
-define(CRITICAL(Format,Args),io:format(Format,Args)).
-define(ALERT(Format),io:format(Format)).
-define(ALERT(Format,Args),io:format(Format,Args)).
-define(EMERGENCY(Format),io:format(Format)).
-define(EMERGENCY(Format,Args),io:format(Format,Args)).
-define(REC_DBG(R),R).
-endif.
-endif.